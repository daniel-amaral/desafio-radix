// <auto-generated />
using DesafioRadix.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DesafioRadix.Migrations
{
    [DbContext(typeof(DesafioRadixContext))]
    [Migration("20171130012239_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("DesafioRadix.Models.Book", b =>
                {
                    b.Property<long>("BookID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Authors");

                    b.Property<long>("ISBN");

                    b.Property<double>("Price");

                    b.Property<string>("Publisher");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("BookID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("DesafioRadix.Models.Review", b =>
                {
                    b.Property<long>("ReviewID")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BookID")
                        .IsRequired();

                    b.Property<int>("Evaluation");

                    b.Property<string>("ReviewAuthor");

                    b.Property<string>("ReviewText");

                    b.HasKey("ReviewID");

                    b.HasIndex("BookID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("DesafioRadix.Models.Review", b =>
                {
                    b.HasOne("DesafioRadix.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
